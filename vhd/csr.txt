-- default initialize
        cmd.ALU_op            <= ALU_plus;
        cmd.LOGICAL_op        <= LOGICAL_and;
        cmd.ALU_Y_sel         <= ALU_Y_rf_rs2;

        cmd.SHIFTER_op        <= SHIFT_rl;
        cmd.SHIFTER_Y_sel     <= SHIFTER_Y_rs2;

        cmd.RF_we             <= '0';
        cmd.RF_SIZE_sel       <= RF_SIZE_word;
        cmd.RF_SIGN_enable    <= '1';
        cmd.DATA_sel          <= DATA_from_alu;

        cmd.PC_we             <= '0';
        cmd.PC_sel            <= PC_from_pc;

        cmd.PC_X_sel          <= PC_X_pc;
        cmd.PC_Y_sel          <= PC_Y_cst_x04;

        cmd.TO_PC_Y_sel       <= TO_PC_Y_immB;

        cmd.AD_we             <= '0';
        cmd.AD_Y_sel          <= AD_Y_immI;

        cmd.IR_we             <= '0';

        cmd.ADDR_sel          <= ADDR_from_pc;
        cmd.mem_we            <= '0';
        cmd.mem_ce            <= '0';

        cmd.cs.CSR_we            <= CSR_none;

        cmd.cs.TO_CSR_sel        <= TO_CSR_from_rs1;
        cmd.cs.CSR_sel           <= CSR_from_mip;
        cmd.cs.MEPC_sel          <= MEPC_from_pc;

        cmd.cs.MSTATUS_mie_set   <= '0';
        cmd.cs.MSTATUS_mie_reset <= '0';

        cmd.cs.CSR_WRITE_mode    <= WRITE_mode_simple;


-- modification of S_Fetch
            when S_Fetch =>
                -- IR <- mem_datain
                cmd.IR_we <= '1';
                state_d <= S_Decode;
				--  add this
                cmd.cs.MEPC_sel <= MEPC_from_pc;
                cmd.PC_sel <= PC_mtvec;
                if status.it then
                    -- MEPC <- PC
                    cmd.cs.CSR_we <= CSR_MEPC;
                    -- MSTATUS(3) <- 0
                    cmd.cs.MSTATUS_mie_set <= '1';
                    -- PC <- 0x00001FFC
                    cmd.PC_we <= '1';
                    state_d <= S_Pre_Fetch;
                end if;
				-- end add this

-- decodage
                case status.IR(6 downto 4) is
                    when "111" =>
                        case status.IR( 3 downto 0 ) is
                            when "0011" => -- CSR
                                case status.IR( 14 downto 12 ) is
                                    when "000" =>
                                        case status.IR( 31 downto 7 ) is
                                            when "0011000000100000000000000" =>
                                                state_d <= S_Mret;
                                            when others => null;
                                        end case;
                                    when "001"|"010"|"011"|"101"|"110"|"111" =>
                                        state_d <= S_Csrr;
                                    when others => null;
                                end case;
                            when others => null;
                        end case;
                    when others => null;


---------- Instructions d'accès aux CSR ----------
            when S_Mret =>
                -- PC <- MEPC
                cmd.PC_sel <= PC_from_mepc;
                cmd.PC_we <= '1';
                cmd.cs.MSTATUS_mie_reset <= '1';
                state_d <= S_Pre_Fetch;

            when S_Csrr =>
                -- Immédiat ou registre
                if status.IR(14) = '0' then
                    cmd.cs.TO_CSR_sel <= TO_CSR_from_rs1;
                else
                    cmd.cs.TO_CSR_sel <= TO_CSR_from_imm;
                end if;
                -- Mode d'écriture
                case status.IR( 13 downto 12 ) is
                    when "01" => cmd.cs.CSR_WRITE_mode <= WRITE_mode_simple;
                    when "10" => cmd.cs.CSR_WRITE_mode <= WRITE_mode_set;
                    when "11" => cmd.cs.CSR_WRITE_mode <= WRITE_mode_clear;
                    when others => null;
                end case;
                -- Registre CSR d'écriture
                case status.IR( 31 downto 20 ) is
                    when x"300" => -- MSTATUS
                        cmd.cs.CSR_we <= CSR_MSTATUS;
                        cmd.cs.CSR_sel    <= CSR_from_mstatus;
                    when x"304" => -- MIE
                        cmd.cs.CSR_we <= CSR_MIE;
                        cmd.cs.CSR_sel <= CSR_from_mie;
                    when x"305" => -- MTVEC
                        cmd.cs.CSR_we <= CSR_MTVEC;
                        cmd.cs.CSR_sel  <= CSR_from_mtvec;
                    when x"341" => -- MEPC
                        cmd.cs.CSR_we <= CSR_MEPC;
                        cmd.cs.CSR_sel <= CSR_from_mepc;
                    when x"342" => -- MCAUSE
                        cmd.cs.CSR_sel   <= CSR_from_mcause;
                    when x"344" => -- MIP
                        cmd.cs.CSR_sel <= CSR_from_mip;
                    when others => null;
                end case;
                cmd.cs.MEPC_sel <= MEPC_from_csr;
                cmd.DATA_sel <= DATA_from_csr;
                cmd.RF_we <= '1';
                state_d <= S_Fetch;
                -- mem[PC]
                cmd.mem_ce <= '1';
